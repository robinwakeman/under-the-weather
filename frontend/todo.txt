Very Sophisticated Kanban Board
--------------------------------

To Do:

- add mobile version for components:
  - Select
  - Dialog?

- add media queries for chart page

- add tour to demo

- make location input component
  - call geocode/autocomplete API

- use actual weather data


  High Priority To Do:
  --------------------------------


- add frontend implementation of edit-entry
  - re-fetch data on dialog close

- format datetime for listview

- add default location to user model

- connect date inputs to chart x-axis

- put real rating data in chart

- re-fetch data when EntryDialog save button is clicked (chartview)

- make demo version account system

- basic ui for account page
  - type of arthritis
  - username
  - email
  - password reset

  - deploy app

  - create README

  Notes:
--------------------------------------
- back end
  - see tutorial: https://medium.com/swlh/jwt-authentication-authorization-in-nodejs-express-mongodb-rest-apis-2019-ad14ec818122

- weather api: darksky
- geocode+autocomplete api: here (autocomplete geocoder)

- weather metrics to include from darksky:
  - temperature, pressure, cloud cover, humidity, dewpoint, rain, snowfall, ozone, nearest storm, uv index, moon phase

--------------------------------------
Future plans:

- add grid view (heatmap grid)
- add statistics view (calculate how much the data is REALLY correlated to weather)
- add mood tracking (as an alternative to arthritis tracking)
------------------------------------
(Main) Tools used:

Front end:
- Material-ui: React component framework
- ReactN: Global state manager for React
- NextJS: Framework for running React (?)
- NodeJS: JS server environment
- ApexCharts: JS Chart library
- React Spring: React-based animation library

Back end:
- MongoDB:
- Mongoose:
- Express: Application-layer framework
- NodeJS: JS server environment
- (list the smaller libraries?)

External APIs:
- DarkSky: historical weather data
- Here: location autocomplete + geocoding

Deployment:
- tbd
